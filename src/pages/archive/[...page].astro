---
import { getCollection } from "astro:content";
import BaseHead from "../../components/base/BaseHead.astro";
import Header from "../../components/base/Header.astro";
import Footer from "../../components/base/Footer.astro";
import { Image } from "astro:assets";
import { Pagination } from "accessible-astro-components";
import Card from "../../components/Card.astro";
export async function getStaticPaths({ paginate }: { paginate: any }) {
  const allPosts = await getCollection("blog");

  // Filter out draft posts
  const publishedPosts = allPosts.filter((post) => !post.data.draft);

  // Sort posts by publication date (assuming pubDate is in ISO 8601 format)
  publishedPosts.sort(
    (a, b) =>
      new Date(b.data.pubDate).valueOf() - new Date(a.data.pubDate).valueOf()
  );

  return paginate(publishedPosts, { pageSize: 6 });
}

interface BlogPostEntry {
  id: string;
  data: {
    title: string;
    description: string;
    headerImage: {
      src: string;
      alt: string;
    };
    draft: boolean;
    pubDate: string; // or Date if you prefer to parse it beforehand
    tldrOne: string;
    tldrTwo: string;
    tldrThree: string;
    categories: string[];
  };
}

interface Props {
  page: {
    data: BlogPostEntry[];
    currentPage: number;
    total: number;
    size: number;
    url: {
      prev: string;
      next: string;
    };
  };
}

const { page }: { page: Props["page"] } = Astro.props;
const { params } = Astro;
---

<html lang="en">
  <head>
    <BaseHead title="Blog Archive" description="Articles sorted by date." />
  </head>

  <body class="bg-white-50">
    <Header />
    <main>
      <div class="grid grid-cols-12">
        <div
          class="lg:col-span-6 lg:col-start-4 lg:col-end-10 col-span-10 col-start-2 col-end-12"
        >
          <h1 class="text-secondary-950">All Articles</h1>

          <h3>Page {page.currentPage}</h3>

          <div
            id="container"
            class="margin-y-xxl flex flex-row flex-wrap gap-6"
          >
            {
              page.data.map((blogPostEntry: BlogPostEntry) => (
                <>
                  <Card
                    url={`/${blogPostEntry.id}`}
                    headerSrc={blogPostEntry.data.headerImage.src}
                    headerAlt={blogPostEntry.data.headerImage.alt}
                    title={blogPostEntry.data.title}
                    tldrOne={blogPostEntry.data.tldrOne}
                    tldrTwo={blogPostEntry.data.tldrTwo}
                    tldrThree={blogPostEntry.data.tldrThree}
                  />
                </>
              ))
            }
          </div>
          <div id="page-numbers" class="flex justify-center">
            <Pagination
              firstPage={page.url.prev ? `/archive` : null}
              previousPage={page.url.prev ? page.url.prev : null}
              nextPage={page.url.next ? page.url.next : null}
              lastPage={page.url.next
                ? `/archive/${Math.round(page.total / page.size)}`
                : null}
              currentPage={page.currentPage}
              totalPages={Math.round(page.total / page.size)}
            />
          </div>
        </div>
      </div>
    </main>
    <Footer />
  </body>
</html>

<style is:global>
  #page-numbers ul {
    list-style: none;
  }

  #card-img {
    height: 300px;
    width: 300px;
  }
</style>
