---
import { getCollection } from "astro:content";
import BaseHead from "../../../components/base/BaseHead.astro";
import Header from "../../../components/base/Header.astro";
import Footer from "../../../components/base/Footer.astro";

import { Pagination } from "accessible-astro-components";
import Card from "../../../components/Card.astro";

export async function getStaticPaths({ paginate }: { paginate: any }) {
  const allPosts = await getCollection("blog");

  const sortedPosts = allPosts
    .filter((post) => !post.data.draft) // Filter out drafts
    .sort(
      (a, b) =>
        new Date(b.data.pubDate).valueOf() - new Date(a.data.pubDate).valueOf()
    ); // Sort by pubDate descending

  // Ensure sortedPosts have defined categories
  const allCategories = [
    ...new Set(
      sortedPosts.flatMap((post) => post.data.categories || []) // Default to an empty array if undefined
    ),
  ];

  return allCategories.flatMap((category) => {
    const filteredPosts = sortedPosts.filter(
      (post) => post.data.categories && post.data.categories.includes(category)
    );
    return paginate(filteredPosts, {
      params: { category },
      pageSize: 6,
    });
  });
}

interface BlogPostEntry {
  id: string;
  data: {
    title: string;
    description: string;
    headerImage: {
      src: string;
      alt: string;
    };
    draft: boolean;
    pubDate: string; // or Date if you prefer to parse it beforehand
    tldrOne: string;
    tldrTwo: string;
    tldrThree: string;
    categories: string[];
  };
}

interface Props {
  page: {
    data: BlogPostEntry[];
    currentPage: number;
    total: number;
    size: number;
    url: {
      prev: string;
      next: string;
    };
  };
}

const { page }: { page: Props["page"] } = Astro.props;
const { params } = Astro;
---

<html lang="en">
  <head>
    <BaseHead
      title={params.category.toLowerCase().replace(/-/g, " ")}
      description={`Category archive for ${params.category.replace(/-/g, " ")}`}
    />
  </head>

  <body class="bg-white-50">
    <Header />
    <main>
      <div class="grid grid-cols-12">
        <div
          class="lg:col-span-6 lg:col-start-4 lg:col-end-10 col-span-10 col-start-2 col-end-12"
        >
          <h1 class="text-secondary-950" style="text-transform:capitalize;">
            Category: {params.category.replace(/-/g, " ")}
          </h1>

          {
            params.category === "blog-design" && (
              <div class="desc">
                You want to present a custom website even if you are using a
                template. These are tips on using HTML and CSS to make your blog
                unique.
              </div>
            )
          }

          {
            params.category === "building-community" && (
              <div class="desc">
                You cannot depend on search and social media to grow your
                audience. Building community is the best way to bring traffic to
                your blog.
              </div>
            )
          }
          {
            params.category === "writing-tips" && (
              <div class="desc">
                The best Search Engine Optimization tactic is good writing.
                Write blogs that humans want to read.
              </div>
            )
          }
          {
            params.category === "making-money" && (
              <div class="desc">
                Some people want to make money from their blogs. These articles
                discuss some of the ways that you can monetize it.
              </div>
            )
          }
          {
            params.category === "motivation" && (
              <div class="desc">
                You are not alone on your journey to start a blog. These are
                words of wisdom from a person who has built something from
                scratch.
              </div>
            )
          }
          {
            params.category === "planning-and-productivity" && (
              <div class="desc">
                These articles are about staying organized. There are ways to
                schedule and automate things that keep you on track.
              </div>
            )
          }
          {
            params.category === "search-traffic" && (
              <div class="desc">
                You are probably starting your blog with a $0 budget. Organic
                search traffic is a pathway to get people to your website
                without spending cash.
              </div>
            )
          }
          <h3>Page {page.currentPage}</h3>

          <div
            id="container"
            class="margin-y-xxl flex flex-row flex-wrap gap-6"
          >
            {
              page.data.map((blogPostEntry: BlogPostEntry) => (
                <>
                  <Card
                    url={`/${blogPostEntry.id}`}
                    headerSrc={blogPostEntry.data.headerImage.src}
                    headerAlt={blogPostEntry.data.headerImage.alt}
                    title={blogPostEntry.data.title}
                    tldrOne={blogPostEntry.data.tldrOne}
                    tldrTwo={blogPostEntry.data.tldrTwo}
                    tldrThree={blogPostEntry.data.tldrThree}
                  />
                </>
              ))
            }
          </div>
          <div id="page-numbers" class="flex justify-center">
            <Pagination
              firstPage={page.url.prev ? `/category/${params.category}` : null}
              previousPage={page.url.prev ? page.url.prev : null}
              nextPage={page.url.next ? page.url.next : null}
              lastPage={page.url.next
                ? `/category/${params.category}/${Math.round(page.total / page.size)}`
                : null}
              currentPage={page.currentPage}
              totalPages={Math.round(page.total / page.size)}
            />
          </div>
        </div>
      </div>
    </main>
    <Footer />
  </body>
</html>

<style is:global>
  #page-numbers ul {
    list-style: none;
  }

  .desc {
    max-width: 45ch;
  }

  #card-img {
    height: 300px;
    width: 300px;
  }
</style>
